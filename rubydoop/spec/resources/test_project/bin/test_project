# encoding: utf-8

$: << File.expand_path('../../lib', __FILE__)

require 'rubydoop'
require 'json'
require 'openssl' # this just asserts that jruby-openssl was packaged correctly

require 'word_count'
require 'uniques'
require 'lazy_output'


Rubydoop.run do |input_path, output_path|
  parallel do
    job 'word_count plain' do
      input input_path
      output "#{output_path}/word_count-plain"

      mapper WordCount::Mapper
      reducer WordCount::Reducer

      output_key Hadoop::Io::Text
      output_value Hadoop::Io::IntWritable
    end

    job 'word_count custom' do
      input input_path, format: WordCount::InputFormat
      output "#{output_path}/word_count-custom"

      mapper WordCount::Mapper
      combiner WordCount::AliceDoublingCombiner
      reducer WordCount::Reducer

      output_key Hadoop::Io::Text
      output_value Hadoop::Io::IntWritable
    end
  end

  job 'difference' do
    input "#{output_path}/word_count-{plain,custom}", format: :key_value_text
    output "#{output_path}/word_count-diff"

    map_output_key Hadoop::Io::Text
    map_output_value Hadoop::Io::Text

    reducer WordCount::DiffReducer

    output_key Hadoop::Io::Text
    output_value Hadoop::Io::Text
  end

  job 'uniques' do
    input input_path
    output "#{output_path}/uniques"

    mapper Uniques::Mapper
    reducer Uniques::Reducer

    partitioner Uniques::Partitioner
    grouping_comparator Uniques::GroupingComparator

    map_output_value Hadoop::Io::Text
    output_key Hadoop::Io::Text
    output_value Hadoop::Io::IntWritable
  end

  job 'lazy_output' do
    input input_path
    output "#{output_path}/lazy_output", lazy: true

    mapper WordCount::Mapper
    reducer LazyOutput::Reducer

    output_key Hadoop::Io::Text
    output_value Hadoop::Io::IntWritable
  end
end
